version: '2.1'
services:
    redis:
        image: 'redis:5.0.5-alpine'
        # command: redis-server --requirepass redispass

    postgres:
        image: postgres:9.6-alpine
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        # Lines to persist data on the local filesystem.
        #    - PGDATA=/var/lib/postgresql/data/pgdata
        #volumes:
        #    - ./pgdata:/var/lib/postgresql/data/pgdata

    webserver:
        image: docker-airflow-enhanced
        build:
            context: ./
        restart: always
        depends_on:
            - postgres
            - redis
        environment:
            - EXECUTOR=Celery
        env_file:
            - ./env_file.env
        volumes:
            - dags:/usr/local/airflow/dags
            - plugins:/usr/local/airflow/plugins
            - ./requirements.txt:/requirements.txt:ro
        ports:
            - "8080:8080"
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    flower:
        image: docker-airflow-enhanced
        build:
            context: ./
        restart: always
        depends_on:
            - redis
        environment:
            - EXECUTOR=Celery
        env_file:
            - ./env_file.env
        volumes:
            - dags:/usr/local/airflow/dags
            - plugins:/usr/local/airflow/plugins
            - ./requirements.txt:/requirements.txt:ro
        ports:
            - "5555:5555"
        command: flower

    scheduler:
        image: docker-airflow-enhanced
        build:
            context: ./
        restart: always
        depends_on:
            - webserver
        volumes:
            - dags:/usr/local/airflow/dags
            - plugins:/usr/local/airflow/plugins
            - ./requirements.txt:/requirements.txt:ro
        environment:
            - EXECUTOR=Celery
        env_file:
            - ./env_file.env
        command: scheduler

    worker:
        image: docker-airflow-enhanced
        build:
            context: ./
        restart: always
        depends_on:
            - scheduler
        volumes:
            - dags:/usr/local/airflow/dags
            - plugins:/usr/local/airflow/plugins
            - ./requirements.txt:/requirements.txt:ro
        environment:
            - EXECUTOR=Celery
        env_file:
            - ./env_file.env
        command: worker

    spark-master:
        image: bde2020/spark-master:2.4.5-hadoop2.7
        container_name: spark-master
        ports:
            - "8082:8080"
            - "7077:7077"
        environment:
            - INIT_DAEMON_STEP=setup_spark

    spark-worker-1:
        image: bde2020/spark-worker:2.4.5-hadoop2.7
        container_name: spark-worker-1
        depends_on:
            - spark-master
        ports:
            - "8081:8081"
        environment:
            - "SPARK_MASTER=spark://spark-master:7077"

    namenode:
        image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
        volumes:
            - namenode:/hadoop/dfs/name
        environment:
            - CLUSTER_NAME=test
        env_file:
            - ./hadoop-hive.env
        ports:
            - "50070:50070"

    datanode:
        image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
        volumes:
            - datanode:/hadoop/dfs/data
        env_file:
            - ./hadoop-hive.env
        environment:
            SERVICE_PRECONDITION: "namenode:50070"
        ports:
            - "50075:50075"

    hive-server:
        image: bde2020/hive:2.3.2-postgresql-metastore
        env_file:
            - ./hadoop-hive.env
        environment:
            HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
            SERVICE_PRECONDITION: "hive-metastore:9083"
        ports:
            - "10000:10000"

    hive-metastore:
        image: bde2020/hive:2.3.2-postgresql-metastore
        env_file:
            - ./hadoop-hive.env
        environment:
            SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
        ports:
            - "9083:9083"
        command: /opt/hive/bin/hive --service metastore

    hive-metastore-postgresql:
        image: bde2020/hive-metastore-postgresql:2.3.0

    presto-coordinator:
        image: shawnzhu/prestodb:0.181
        ports:
            - "8083:8080"

volumes:
    dags:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: $PWD/dags
    plugins:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: $PWD/plugins
    namenode:
    datanode:
